services:
  #############################################################################################
  ###                                       Postgres                                        ###
  #############################################################################################
  post-db:
    container_name: post-db
    image: postgres:16
    restart: always
    build:
      context: ./src/database
      dockerfile: Dockerfile
    volumes:
      - ./src/database/db/entrypoint:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin}
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_DB: ${POSTGRES_DB:-app}
    networks:
      - app-network
    ports:
      - 5432:5432
  #############################################################################################
  ###                                       PG Admin                                        ###
  #############################################################################################

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
      - 5050:80
    environment:
      PGADMIN_DEFAULT_PASSWORD: app_admin
      PGADMIN_DEFAULT_EMAIL: app_admin@email.com
    networks:
      - app-network

  #############################################################################################
  ###                                       Frontend                                        ###
  #############################################################################################
  vite-app:
    container_name: vite-app
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
    networks:
      - app-network
    ports:
      - "8080:8080"
    healthcheck:
      test: curl --fail http://localhost:8080 || exit 1
      interval: 20s
      timeout: 30s
      retries: 5
      start_period: 20s

  #############################################################################################
  ###                                         API                                           ###
  #############################################################################################
  express-api:
    container_name: express-api
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    networks:
      - app-network
    ports:
      - 3000:3000
    healthcheck:
      test: curl localhost:${PORT:-3000}/api/health | grep 'API is healthy and ready'
      interval: 20s
      timeout: 30s
      retries: 5
      start_period: 20s

#############################################################################################
###                                       Volumes                                         ###
#############################################################################################

volumes:
  pgdata-volume:

#############################################################################################
###                                       Network                                         ###
#############################################################################################

networks:
  app-network:
    driver: "bridge"
